"ID","Process ID","Process Name","Host Name","Kernel Name","Context","Stream","Block Size","Grid Size","Device","CC","Section Name","Metric Name","Metric Unit","Metric Value","Rule Name","Rule Type","Rule Description","Estimated Speedup Type","Estimated Speedup"
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","GPU Speed Of Light Throughput","DRAM Frequency","Ghz","8.98",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","GPU Speed Of Light Throughput","SM Frequency","Ghz","1.06",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","45971",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","GPU Speed Of Light Throughput","Memory Throughput","%","44.21",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","GPU Speed Of Light Throughput","DRAM Throughput","%","44.21",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","GPU Speed Of Light Throughput","Duration","us","43.20",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","9.65",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","GPU Speed Of Light Throughput","L2 Cache Throughput","%","14.50",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","GPU Speed Of Light Throughput","SM Active Cycles","cycle","31556.44",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","6.46",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","SpeedOfLight","","","","SOLBottleneck","OPT","This kernel grid is too small to fill the available resources on this device, resulting in only 0.4 full waves across all SMs. Look at Launch Statistics for more details.","",""
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis.","",""
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","PM Sampling","Maximum Buffer Size","Mbyte","36.18",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","PM Sampling","Dropped Samples","sample","0",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","PM Sampling","Maximum Sampling Interval","us","2",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","PM Sampling","# Pass Groups","","2",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.27",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.18",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Compute Workload Analysis","Issue Slots Busy","%","6.64",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.27",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Compute Workload Analysis","SM Busy","%","6.64",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","ComputeWorkloadAnalysis","","","","HighPipeUtilization","OPT","All compute pipelines are under-utilized. Either this workload is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.","local","94.34"
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Memory Workload Analysis","Memory Throughput","Gbyte/s","381.30",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Memory Workload Analysis","Mem Busy","%","7.57",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Memory Workload Analysis","Max Bandwidth","%","44.21",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Memory Workload Analysis","L1/TEX Hit Rate","%","0",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Memory Workload Analysis","L2 Compression Ratio","","0",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Memory Workload Analysis","L2 Hit Rate","%","4.23",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Memory Workload Analysis","Mem Pipes Busy","%","6.46",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Scheduler Statistics","One or More Eligible","%","26.54",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Scheduler Statistics","Issued Warp Per Scheduler","","0.27",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Scheduler Statistics","No Eligible","%","73.46",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Scheduler Statistics","Active Warps Per Scheduler","warp","1.00",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.27",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","SchedulerStats","","","","IssueSlotUtilization","OPT","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.8 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 1.00 active warps per scheduler, which already limits the scheduler to less than a warp per instruction.","local","55.79"
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","3.77",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","3.77",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Warp State Statistics","Avg. Active Threads Per Warp","","32",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","28.90",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","2092.27",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Instruction Statistics","Executed Instructions","inst","1188408",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","2096.48",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Instruction Statistics","Issued Instructions","inst","1190800",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","InstructionStats","","","","FPInstructions","OPT","This kernel executes 6656 fused and 176384 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 48% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions.","global","0.9131"
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Launch Statistics","Block Size","","32",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Launch Statistics","Grid Size","","104",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Launch Statistics","Registers Per Thread","register/thread","117",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Launch Statistics","Shared Memory Configuration Size","Kbyte","102.40",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Launch Statistics","Dynamic Shared Memory Per Block","Kbyte/block","50",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Launch Statistics","# SMs","SM","142",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Launch Statistics","Threads","thread","3328",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Launch Statistics","Uses Green Context","","0",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Launch Statistics","Waves Per SM","","0.37",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","LaunchStats","","","","LaunchConfiguration","OPT","The grid for this launch is configured to execute only 104 blocks, which is less than the GPU's 142 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations.","global","26.76"
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Occupancy","Block Limit SM","block","24",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Occupancy","Block Limit Registers","block","16",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Occupancy","Block Limit Shared Mem","block","2",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Occupancy","Block Limit Warps","block","48",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Occupancy","Theoretical Active Warps per SM","warp","2",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Occupancy","Theoretical Occupancy","%","4.17",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Occupancy","Achieved Occupancy","%","2.09",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Occupancy","Achieved Active Warps Per SM","warp","1.00",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Occupancy","","","","TheoreticalOccupancy","OPT","The 1.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. This kernel's theoretical occupancy (8.3%) is limited by the required amount of shared memory.","global","55.79"
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","GPU and Memory Workload Distribution","Average DRAM Active Cycles","cycle","171584",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","GPU and Memory Workload Distribution","Total DRAM Elapsed Cycles","cycle","4657152",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","GPU and Memory Workload Distribution","Average L1 Active Cycles","cycle","31556.44",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","GPU and Memory Workload Distribution","Total L1 Elapsed Cycles","cycle","6527392",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","GPU and Memory Workload Distribution","Average L2 Active Cycles","cycle","55573.21",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","GPU and Memory Workload Distribution","Total L2 Elapsed Cycles","cycle","2989056",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","GPU and Memory Workload Distribution","Average SM Active Cycles","cycle","31556.44",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","GPU and Memory Workload Distribution","Total SM Elapsed Cycles","cycle","6527392",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","GPU and Memory Workload Distribution","Average SMSP Active Cycles","cycle","7900.27",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","GPU and Memory Workload Distribution","Total SMSP Elapsed Cycles","cycle","26109568",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more SMs have a much lower number of active cycles than the average number of active cycles. Maximum instance value is 28.48% above the average, while the minimum instance value is 100.00% below the average.","global","19.55"
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more SMSPs have a much lower number of active cycles than the average number of active cycles. Maximum instance value is 82.19% above the average, while the minimum instance value is 100.00% below the average.","global","14.13"
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","WorkloadDistribution","","","","WorkloadImbalance","OPT","One or more L1 Slices have a much lower number of active cycles than the average number of active cycles. Maximum instance value is 28.48% above the average, while the minimum instance value is 100.00% below the average.","global","19.55"
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Source Counters","Branch Instructions Ratio","%","0.01",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Source Counters","Branch Instructions","inst","17576",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Source Counters","Branch Efficiency","%","100",
"4","4127","python3.12","127.0.0.1","attend_ker(globals)","1","7","(32, 1, 1)","(8, 13, 1)","0","8.9","Source Counters","Avg. Divergent Branches","","0",
